{
  "contractName": "Prediction",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_coin",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        }
      ],
      "name": "TransferBatch",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "TransferSingle",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "value",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "URI",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "accounts",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        }
      ],
      "name": "balanceOfBatch",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "coin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "identifier",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "oracle",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeBatchTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "uri",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "buySet",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "sellSet",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_coin\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"buySet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"coin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"identifier\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"sellSet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/kylescott/src/simple_prediction/contracts/Prediction.sol\":\"Prediction\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/kylescott/src/simple_prediction/contracts/Prediction.sol\":{\"keccak256\":\"0x6463d29f1cd7ee8eaa757aeb48c41b8f763fd180ccbcd571a6fab4d3a8801d94\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52551425fde10f48e662b6ce31339ae29f2ef5ab458462d01490f66045c5b274\",\"dweb:/ipfs/Qmcix6SAxTzNJwr66JiXvfvFw5hHZ4bFEDeCdnDVgVDazx\"]},\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0x8d0a3d2756dc8eff2b2563b52a6dcd3ab36e07b57211d3ac7c76efee6c4682e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://47bcf0ab599479a00d280cea1f47857b993ca0d0fb2cffc17ef1c452c5f61140\",\"dweb:/ipfs/QmPsJeyQ4L5bKTgsEk6UiNuTd35wUAmAm2ko9F4J3SsU6V\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x249bc2a6d919da5f5145950664134cfcf2f66874bda801fd3b8fb861783da079\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2db9d720fadb1315ba64790815f9f1d80237cca584fc530b8906519bd46ff4cc\",\"dweb:/ipfs/QmXQSGPuGHG5e9ZRVbcUymP3B78cn6ZjfaiaEwd3P3yBCF\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xc7aa8a96aaeb7e1672a3d5fd37582136ff46b6a6cafabcc40ec0e00a42915e1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f294719963da5d6c0aa89f6e79eb6dbcbcc258a2f42686e735dbb0791593a761\",\"dweb:/ipfs/QmTnVcJfNe5728bUBhjMmBXJFDR1HwVQfw9jGmexbGmS7z\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0x6ba0564f6970414d1166ee83127b834bbe7dbf699241a3005eb7ae64a2211975\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9784827a0575eab840a3b2d42900390724c79139063150955c95f5b730545669\",\"dweb:/ipfs/Qmergdvk1vDFSpXxZSXghPm5SxKBUqrqkZdYmsUSaMwaXK\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ec48567e7ad06acb670980d5cdf3fd7f3949bf12894f02d68c3bb43e75aa84f\",\"dweb:/ipfs/QmaG3R2J9cz92YT77vFjYrjMNU2wHp4ypwYD62HqDUqS5U\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x069b2631bb5b5193a58ccf7a06266c7361bd2c20095667af4402817605627f45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a4c96fafff76deda5697c3c5c98cade6e6e1b178254544c106bf360c079ce4e\",\"dweb:/ipfs/QmXmxubE3jnatFgZuN8ay1VV6hZ8WRmhvUjNpeVjki15HX\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2bfdea0d2562c76fb3c4cf70a86c6ba25c5a30e8f8515c95aafdf8383f8395\",\"dweb:/ipfs/QmTbFya18786ckJfLYUoWau9jBTKfmWnWm5XSViWvB7PXN\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x5718c5df9bd67ac68a796961df938821bb5dc0cd4c6118d77e9145afb187409b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d10e1d9b26042424789246603906ad06143bf9a928f4e99de8b5e3bdc662f549\",\"dweb:/ipfs/Qmejonoaj5MLekPus229rJQHcC6E9dz2xorjHJR84fMfmn\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://796ab6e88af7bf0e78def0f059310c903af6a312b565344e0ff524a0f26e81c6\",\"dweb:/ipfs/QmcsVgLgzWdor3UnAztUkXKNGcysm1MPneWksF72AvnwBx\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100ce5760003560e01c80634e1273f41161008c578063a22cb46511610066578063a22cb46514610225578063e96b67f314610241578063e985e9c51461025d578063f242432a1461028d576100ce565b80634e1273f4146101b95780637998a1c4146101e95780637dc0d1d014610207576100ce565b8062fdd58e146100d357806301ffc9a7146101035780630376042b146101335780630e89341c1461014f57806311df99951461017f5780632eb2c2d61461019d575b600080fd5b6100ed60048036038101906100e89190612393565b6102a9565b6040516100fa9190612fda565b60405180910390f35b61011d60048036038101906101189190612464565b610372565b60405161012a9190612da2565b60405180910390f35b61014d600480360381019061014891906124b6565b610454565b005b610169600480360381019061016491906124b6565b6106f0565b6040516101769190612dd8565b60405180910390f35b610187610784565b6040516101949190612c0c565b60405180910390f35b6101b760048036038101906101b29190612209565b6107aa565b005b6101d360048036038101906101ce91906123cf565b610ba0565b6040516101e09190612d49565b60405180910390f35b6101f1610d51565b6040516101fe9190612dbd565b60405180910390f35b61020f610d57565b60405161021c9190612c0c565b60405180910390f35b61023f600480360381019061023a9190612357565b610d7d565b005b61025b600480360381019061025691906124b6565b610efe565b005b610277600480360381019061027291906121cd565b6111ac565b6040516102849190612da2565b60405180910390f35b6102a760048036038101906102a291906122c8565b611240565b005b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561031a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161031190612e5a565b60405180910390fd5b60008083815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60007fd9b67a26000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061043d57507f0e89341c000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b8061044d575061044c82611558565b5b9050919050565b6000600267ffffffffffffffff811115610497577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280602002602001820160405280156104c55781602001602082028036833780820191505090505b5090506000600267ffffffffffffffff81111561050b577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280602002602001820160405280156105395781602001602082028036833780820191505090505b50905060005b60028110156105f1576001816105559190613148565b83828151811061058e577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001018181525050838282815181106105d4577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001018181525050806105ea906132c4565b905061053f565b506105fd3383836115c2565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33856040518363ffffffff1660e01b815260040161065a929190612d20565b602060405180830381600087803b15801561067457600080fd5b505af1158015610688573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ac919061243b565b6106eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106e290612e3a565b60405180910390fd5b505050565b6060600280546106ff90613292565b80601f016020809104026020016040519081016040528092919081815260200182805461072b90613292565b80156107785780601f1061074d57610100808354040283529160200191610778565b820191906000526020600020905b81548152906001019060200180831161075b57829003601f168201915b50505050509050919050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b81518351146107ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107e590612f9a565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16141561085e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161085590612eba565b60405180910390fd5b6108666118c8565b73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614806108ac57506108ab856108a66118c8565b6111ac565b5b6108eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108e290612eda565b60405180910390fd5b60006108f56118c8565b90506109058187878787876118d0565b60005b8451811015610b0b57600085828151811061094c577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015190506000858381518110610991577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101519050600080600084815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610a32576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a2990612f3a565b60405180910390fd5b8181610a3e919061319e565b60008085815260200190815260200160002060008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508160008085815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610af09190613148565b9250508190555050505080610b04906132c4565b9050610908565b508473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051610b82929190612d6b565b60405180910390a4610b988187878787876118d8565b505050505050565b60608151835114610be6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bdd90612f7a565b60405180910390fd5b6000835167ffffffffffffffff811115610c29577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051908082528060200260200182016040528015610c575781602001602082028036833780820191505090505b50905060005b8451811015610d4657610cf0858281518110610ca2577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151858381518110610ce3577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101516102a9565b828281518110610d29577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101818152505080610d3f906132c4565b9050610c5d565b508091505092915050565b60055481565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b8173ffffffffffffffffffffffffffffffffffffffff16610d9c6118c8565b73ffffffffffffffffffffffffffffffffffffffff161415610df3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dea90612f5a565b60405180910390fd5b8060016000610e006118c8565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff16610ead6118c8565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610ef29190612da2565b60405180910390a35050565b6000600267ffffffffffffffff811115610f41577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051908082528060200260200182016040528015610f6f5781602001602082028036833780820191505090505b5090506000600267ffffffffffffffff811115610fb5577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051908082528060200260200182016040528015610fe35781602001602082028036833780820191505090505b50905060005b600281101561109b57600181610fff9190613148565b838281518110611038577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010181815250508382828151811061107e577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101818152505080611094906132c4565b9050610fe9565b50600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b81526004016110fb93929190612c8f565b602060405180830381600087803b15801561111557600080fd5b505af1158015611129573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061114d919061243b565b61118c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161118390612efa565b60405180910390fd5b6111a733838360405180602001604052806000815250611aa8565b505050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614156112b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112a790612eba565b60405180910390fd5b6112b86118c8565b73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614806112fe57506112fd856112f86118c8565b6111ac565b5b61133d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161133490612e9a565b60405180910390fd5b60006113476118c8565b905061136781878761135888611d12565b61136188611d12565b876118d0565b600080600086815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050838110156113fe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113f590612f3a565b60405180910390fd5b838161140a919061319e565b60008087815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508360008087815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546114bc9190613148565b925050819055508573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628888604051611539929190612ff5565b60405180910390a461154f828888888888611dd8565b50505050505050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611632576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161162990612f1a565b60405180910390fd5b8051825114611676576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161166d90612f9a565b60405180910390fd5b60006116806118c8565b90506116a0818560008686604051806020016040528060008152506118d0565b60005b83518110156118425760008482815181106116e7577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101519050600084838151811061172c577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101519050600080600084815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050818110156117cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117c490612e7a565b60405180910390fd5b81816117d9919061319e565b60008085815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505050808061183a906132c4565b9150506116a3565b50600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb86866040516118ba929190612d6b565b60405180910390a450505050565b600033905090565b505050505050565b6118f78473ffffffffffffffffffffffffffffffffffffffff16611fa8565b15611aa0578373ffffffffffffffffffffffffffffffffffffffff1663bc197c8187878686866040518663ffffffff1660e01b815260040161193d959493929190612c27565b602060405180830381600087803b15801561195757600080fd5b505af192505050801561198857506040513d601f19601f82011682018060405250810190611985919061248d565b60015b611a17576119946133b8565b8061199f57506119dc565b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119d39190612dd8565b60405180910390fd5b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a0e90612dfa565b60405180910390fd5b63bc197c8160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614611a9e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a9590612e1a565b60405180910390fd5b505b505050505050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415611b18576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b0f90612fba565b60405180910390fd5b8151835114611b5c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b5390612f9a565b60405180910390fd5b6000611b666118c8565b9050611b77816000878787876118d0565b60005b8451811015611c7c57838181518110611bbc577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151600080878481518110611c00577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254611c629190613148565b925050819055508080611c74906132c4565b915050611b7a565b508473ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051611cf4929190612d6b565b60405180910390a4611d0b816000878787876118d8565b5050505050565b60606000600167ffffffffffffffff811115611d57577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051908082528060200260200182016040528015611d855781602001602082028036833780820191505090505b5090508281600081518110611dc3577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101818152505080915050919050565b611df78473ffffffffffffffffffffffffffffffffffffffff16611fa8565b15611fa0578373ffffffffffffffffffffffffffffffffffffffff1663f23a6e6187878686866040518663ffffffff1660e01b8152600401611e3d959493929190612cc6565b602060405180830381600087803b158015611e5757600080fd5b505af1925050508015611e8857506040513d601f19601f82011682018060405250810190611e85919061248d565b60015b611f1757611e946133b8565b80611e9f5750611edc565b806040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ed39190612dd8565b60405180910390fd5b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f0e90612dfa565b60405180910390fd5b63f23a6e6160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614611f9e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f9590612e1a565b60405180910390fd5b505b505050505050565b600080823b905060008111915050919050565b6000611fce611fc98461304f565b61301e565b90508083825260208201905082856020860282011115611fed57600080fd5b60005b8581101561201d578161200388826120d1565b845260208401935060208301925050600181019050611ff0565b5050509392505050565b600061203a6120358461307b565b61301e565b9050808382526020820190508285602086028201111561205957600080fd5b60005b85811015612089578161206f88826121b8565b84526020840193506020830192505060018101905061205c565b5050509392505050565b60006120a66120a1846130a7565b61301e565b9050828152602081018484840111156120be57600080fd5b6120c9848285613250565b509392505050565b6000813590506120e08161346e565b92915050565b600082601f8301126120f757600080fd5b8135612107848260208601611fbb565b91505092915050565b600082601f83011261212157600080fd5b8135612131848260208601612027565b91505092915050565b60008135905061214981613485565b92915050565b60008151905061215e81613485565b92915050565b6000813590506121738161349c565b92915050565b6000815190506121888161349c565b92915050565b600082601f83011261219f57600080fd5b81356121af848260208601612093565b91505092915050565b6000813590506121c7816134b3565b92915050565b600080604083850312156121e057600080fd5b60006121ee858286016120d1565b92505060206121ff858286016120d1565b9150509250929050565b600080600080600060a0868803121561222157600080fd5b600061222f888289016120d1565b9550506020612240888289016120d1565b945050604086013567ffffffffffffffff81111561225d57600080fd5b61226988828901612110565b935050606086013567ffffffffffffffff81111561228657600080fd5b61229288828901612110565b925050608086013567ffffffffffffffff8111156122af57600080fd5b6122bb8882890161218e565b9150509295509295909350565b600080600080600060a086880312156122e057600080fd5b60006122ee888289016120d1565b95505060206122ff888289016120d1565b9450506040612310888289016121b8565b9350506060612321888289016121b8565b925050608086013567ffffffffffffffff81111561233e57600080fd5b61234a8882890161218e565b9150509295509295909350565b6000806040838503121561236a57600080fd5b6000612378858286016120d1565b92505060206123898582860161213a565b9150509250929050565b600080604083850312156123a657600080fd5b60006123b4858286016120d1565b92505060206123c5858286016121b8565b9150509250929050565b600080604083850312156123e257600080fd5b600083013567ffffffffffffffff8111156123fc57600080fd5b612408858286016120e6565b925050602083013567ffffffffffffffff81111561242557600080fd5b61243185828601612110565b9150509250929050565b60006020828403121561244d57600080fd5b600061245b8482850161214f565b91505092915050565b60006020828403121561247657600080fd5b600061248484828501612164565b91505092915050565b60006020828403121561249f57600080fd5b60006124ad84828501612179565b91505092915050565b6000602082840312156124c857600080fd5b60006124d6848285016121b8565b91505092915050565b60006124eb8383612bee565b60208301905092915050565b612500816131d2565b82525050565b6000612511826130e7565b61251b8185613115565b9350612526836130d7565b8060005b8381101561255757815161253e88826124df565b975061254983613108565b92505060018101905061252a565b5085935050505092915050565b61256d816131e4565b82525050565b61257c816131f0565b82525050565b600061258d826130f2565b6125978185613126565b93506125a781856020860161325f565b6125b08161339a565b840191505092915050565b60006125c6826130fd565b6125d08185613137565b93506125e081856020860161325f565b6125e98161339a565b840191505092915050565b6000612601603483613137565b91507f455243313135353a207472616e7366657220746f206e6f6e204552433131353560008301527f526563656976657220696d706c656d656e7465720000000000000000000000006020830152604082019050919050565b6000612667602883613137565b91507f455243313135353a204552433131353552656365697665722072656a6563746560008301527f6420746f6b656e730000000000000000000000000000000000000000000000006020830152604082019050919050565b60006126cd602483613137565b91507f636f756c64206e6f74207472616e7366657220636f6c6c61746572616c20746f60008301527f6b656e73000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000612733602b83613137565b91507f455243313135353a2062616c616e636520717565727920666f7220746865207a60008301527f65726f20616464726573730000000000000000000000000000000000000000006020830152604082019050919050565b6000612799602483613137565b91507f455243313135353a206275726e20616d6f756e7420657863656564732062616c60008301527f616e6365000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006127ff602983613137565b91507f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260008301527f20617070726f76656400000000000000000000000000000000000000000000006020830152604082019050919050565b6000612865602583613137565b91507f455243313135353a207472616e7366657220746f20746865207a65726f20616460008301527f64726573730000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006128cb603283613137565b91507f455243313135353a207472616e736665722063616c6c6572206973206e6f742060008301527f6f776e6572206e6f7220617070726f76656400000000000000000000000000006020830152604082019050919050565b6000612931602383613137565b91507f636f756c64206e6f74207265636569766520636f6c6c61746572616c20746f6b60008301527f656e7300000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000612997602383613137565b91507f455243313135353a206275726e2066726f6d20746865207a65726f206164647260008301527f65737300000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006129fd602a83613137565b91507f455243313135353a20696e73756666696369656e742062616c616e636520666f60008301527f72207472616e73666572000000000000000000000000000000000000000000006020830152604082019050919050565b6000612a63602983613137565b91507f455243313135353a2073657474696e6720617070726f76616c2073746174757360008301527f20666f722073656c6600000000000000000000000000000000000000000000006020830152604082019050919050565b6000612ac9602983613137565b91507f455243313135353a206163636f756e747320616e6420696473206c656e67746860008301527f206d69736d6174636800000000000000000000000000000000000000000000006020830152604082019050919050565b6000612b2f602883613137565b91507f455243313135353a2069647320616e6420616d6f756e7473206c656e6774682060008301527f6d69736d617463680000000000000000000000000000000000000000000000006020830152604082019050919050565b6000612b95602183613137565b91507f455243313135353a206d696e7420746f20746865207a65726f2061646472657360008301527f73000000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b612bf781613246565b82525050565b612c0681613246565b82525050565b6000602082019050612c2160008301846124f7565b92915050565b600060a082019050612c3c60008301886124f7565b612c4960208301876124f7565b8181036040830152612c5b8186612506565b90508181036060830152612c6f8185612506565b90508181036080830152612c838184612582565b90509695505050505050565b6000606082019050612ca460008301866124f7565b612cb160208301856124f7565b612cbe6040830184612bfd565b949350505050565b600060a082019050612cdb60008301886124f7565b612ce860208301876124f7565b612cf56040830186612bfd565b612d026060830185612bfd565b8181036080830152612d148184612582565b90509695505050505050565b6000604082019050612d3560008301856124f7565b612d426020830184612bfd565b9392505050565b60006020820190508181036000830152612d638184612506565b905092915050565b60006040820190508181036000830152612d858185612506565b90508181036020830152612d998184612506565b90509392505050565b6000602082019050612db76000830184612564565b92915050565b6000602082019050612dd26000830184612573565b92915050565b60006020820190508181036000830152612df281846125bb565b905092915050565b60006020820190508181036000830152612e13816125f4565b9050919050565b60006020820190508181036000830152612e338161265a565b9050919050565b60006020820190508181036000830152612e53816126c0565b9050919050565b60006020820190508181036000830152612e7381612726565b9050919050565b60006020820190508181036000830152612e938161278c565b9050919050565b60006020820190508181036000830152612eb3816127f2565b9050919050565b60006020820190508181036000830152612ed381612858565b9050919050565b60006020820190508181036000830152612ef3816128be565b9050919050565b60006020820190508181036000830152612f1381612924565b9050919050565b60006020820190508181036000830152612f338161298a565b9050919050565b60006020820190508181036000830152612f53816129f0565b9050919050565b60006020820190508181036000830152612f7381612a56565b9050919050565b60006020820190508181036000830152612f9381612abc565b9050919050565b60006020820190508181036000830152612fb381612b22565b9050919050565b60006020820190508181036000830152612fd381612b88565b9050919050565b6000602082019050612fef6000830184612bfd565b92915050565b600060408201905061300a6000830185612bfd565b6130176020830184612bfd565b9392505050565b6000604051905081810181811067ffffffffffffffff821117156130455761304461336b565b5b8060405250919050565b600067ffffffffffffffff82111561306a5761306961336b565b5b602082029050602081019050919050565b600067ffffffffffffffff8211156130965761309561336b565b5b602082029050602081019050919050565b600067ffffffffffffffff8211156130c2576130c161336b565b5b601f19601f8301169050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600061315382613246565b915061315e83613246565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156131935761319261330d565b5b828201905092915050565b60006131a982613246565b91506131b483613246565b9250828210156131c7576131c661330d565b5b828203905092915050565b60006131dd82613226565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b8381101561327d578082015181840152602081019050613262565b8381111561328c576000848401525b50505050565b600060028204905060018216806132aa57607f821691505b602082108114156132be576132bd61333c565b5b50919050565b60006132cf82613246565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156133025761330161330d565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b60008160e01c9050919050565b600060443d10156133c85761346b565b60046000803e6133d96000516133ab565b6308c379a081146133ea575061346b565b60405160043d036004823e80513d602482011167ffffffffffffffff821117156134165750505061346b565b808201805167ffffffffffffffff81111561343557505050505061346b565b8060208301013d85018111156134505750505050505061346b565b6134598261339a565b60208401016040528296505050505050505b90565b613477816131d2565b811461348257600080fd5b50565b61348e816131e4565b811461349957600080fd5b50565b6134a5816131fa565b81146134b057600080fd5b50565b6134bc81613246565b81146134c757600080fd5b5056fea2646970667358221220ab0ed2099e48c2157fd6598f11cb971e7d43a31312a25cf7c515c8c491a4aa4a64736f6c63430008000033",
  "immutableReferences": {},
  "sourceMap": "175:1317:2:-:0;;;308:173;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1036:63:3;;;;;;;;;;;;;;;;;1079:13;1087:4;1079:7;;;:13;;:::i;:::-;1036:63;353:5:2;346:4;;:12;;;;;;;;;;;;;;;;;;377:10;368:6;;:19;;;;;;;;;;;;;;;;;;439:6;;;;;;;;;;;470:1;422:51;;;;;;;;;:::i;:::-;;;;;;;;;;;;;412:62;;;;;;399:10;:75;;;;308:173;175:1317;;6746:86:3;6819:6;6812:4;:13;;;;;;;;;;;;:::i;:::-;;6746:86;:::o;175:1317:2:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:143:13:-;;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;70:80;;;;:::o;156:284::-;;275:2;263:9;254:7;250:23;246:32;243:2;;;291:1;288;281:12;243:2;334:1;359:64;415:7;406:6;395:9;391:22;359:64;:::i;:::-;349:74;;305:128;233:207;;;;:::o;446:157::-;551:45;571:24;589:5;571:24;:::i;:::-;551:45;:::i;:::-;546:3;539:58;529:74;;:::o;609:348::-;;790:85;872:2;867:3;790:85;:::i;:::-;783:92;;905:16;901:1;896:3;892:11;885:37;948:2;943:3;939:12;932:19;;773:184;;;:::o;963:157::-;1068:45;1088:24;1106:5;1088:24;:::i;:::-;1068:45;:::i;:::-;1063:3;1056:58;1046:74;;:::o;1126:663::-;;1382:75;1453:3;1444:6;1382:75;:::i;:::-;1482:2;1477:3;1473:12;1466:19;;1502:148;1646:3;1502:148;:::i;:::-;1495:155;;1660:75;1731:3;1722:6;1660:75;:::i;:::-;1760:2;1755:3;1751:12;1744:19;;1780:3;1773:10;;1371:418;;;;;:::o;1795:148::-;;1934:3;1919:18;;1909:34;;;;:::o;1949:96::-;;2015:24;2033:5;2015:24;:::i;:::-;2004:35;;1994:51;;;:::o;2051:126::-;;2128:42;2121:5;2117:54;2106:65;;2096:81;;;:::o;2183:77::-;;2249:5;2238:16;;2228:32;;;:::o;2266:320::-;;2347:1;2341:4;2337:12;2327:22;;2394:1;2388:4;2384:12;2415:18;2405:2;;2471:4;2463:6;2459:17;2449:27;;2405:2;2533;2525:6;2522:14;2502:18;2499:38;2496:2;;;2552:18;;:::i;:::-;2496:2;2317:269;;;;:::o;2592:100::-;;2660:26;2680:5;2660:26;:::i;:::-;2649:37;;2639:53;;;:::o;2698:94::-;;2766:20;2780:5;2766:20;:::i;:::-;2755:31;;2745:47;;;:::o;2798:79::-;;2866:5;2855:16;;2845:32;;;:::o;2883:180::-;2931:77;2928:1;2921:88;3028:4;3025:1;3018:15;3052:4;3049:1;3042:15;3069:94;;3150:5;3146:2;3142:14;3121:35;;3111:52;;;:::o;3169:122::-;3242:24;3260:5;3242:24;:::i;:::-;3235:5;3232:35;3222:2;;3281:1;3278;3271:12;3222:2;3212:79;:::o;175:1317:2:-;;;;;;;",
  "deployedSourceMap": "175:1317:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2103:228:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1166:293;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1008:482:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1858:103:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;220:19:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4719:1204:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2488:530;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;273:25:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;245:21;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3086:306:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;487:515:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3459:166:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3692:955;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2103:228;2189:7;2235:1;2216:21;;:7;:21;;;;2208:77;;;;;;;;;;;;:::i;:::-;;;;;;;;;2302:9;:13;2312:2;2302:13;;;;;;;;;;;:22;2316:7;2302:22;;;;;;;;;;;;;;;;2295:29;;2103:228;;;;:::o;1166:293::-;1268:4;1306:26;1291:41;;;:11;:41;;;;:109;;;;1363:37;1348:52;;;:11;:52;;;;1291:109;:161;;;;1416:36;1440:11;1416:23;:36::i;:::-;1291:161;1284:168;;1166:293;;;:::o;1008:482:2:-;1056:25;1100:1;1084:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1056:47;;1113:21;1153:1;1137:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1113:43;;1172:6;1167:115;1193:1;1184;:11;1167:115;;;1235:1;1233;:3;;;;:::i;:::-;1216:11;1228:1;1216:14;;;;;;;;;;;;;;;;;;;;;:20;;;;;1264:7;1251;1259:1;1251:10;;;;;;;;;;;;;;;;;;;;;:20;;;;;1197:3;;;;:::i;:::-;;;1167:115;;;;1292:90;1316:10;1340:11;1365:7;1292:10;:90::i;:::-;1407:4;;;;;;;;;;;1400:21;;;1422:10;1434:7;1400:42;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1392:91;;;;;;;;;;;;:::i;:::-;;;;;;;;;1008:482;;;:::o;1858:103:3:-;1918:13;1950:4;1943:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1858:103;;;:::o;220:19:2:-;;;;;;;;;;;;;:::o;4719:1204:3:-;4973:7;:14;4959:3;:10;:28;4951:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;5064:1;5050:16;;:2;:16;;;;5042:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;5147:12;:10;:12::i;:::-;5139:20;;:4;:20;;;:60;;;;5163:36;5180:4;5186:12;:10;:12::i;:::-;5163:16;:36::i;:::-;5139:60;5118:157;;;;;;;;;;;;:::i;:::-;;;;;;;;;5286:16;5305:12;:10;:12::i;:::-;5286:31;;5328:60;5349:8;5359:4;5365:2;5369:3;5374:7;5383:4;5328:20;:60::i;:::-;5404:9;5399:369;5423:3;:10;5419:1;:14;5399:369;;;5454:10;5467:3;5471:1;5467:6;;;;;;;;;;;;;;;;;;;;;;5454:19;;5487:14;5504:7;5512:1;5504:10;;;;;;;;;;;;;;;;;;;;;;5487:27;;5529:19;5551:9;:13;5561:2;5551:13;;;;;;;;;;;:19;5565:4;5551:19;;;;;;;;;;;;;;;;5529:41;;5607:6;5592:11;:21;;5584:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;5710:6;5696:11;:20;;;;:::i;:::-;5674:9;:13;5684:2;5674:13;;;;;;;;;;;:19;5688:4;5674:19;;;;;;;;;;;;;;;:42;;;;5751:6;5730:9;:13;5740:2;5730:13;;;;;;;;;;;:17;5744:2;5730:17;;;;;;;;;;;;;;;;:27;;;;;;;:::i;:::-;;;;;;;;5399:369;;;5435:3;;;;:::i;:::-;;;5399:369;;;;5813:2;5783:47;;5807:4;5783:47;;5797:8;5783:47;;;5817:3;5822:7;5783:47;;;;;;;:::i;:::-;;;;;;;;5841:75;5877:8;5887:4;5893:2;5897:3;5902:7;5911:4;5841:35;:75::i;:::-;4719:1204;;;;;;:::o;2488:530::-;2661:16;2720:3;:10;2701:8;:15;:29;2693:83;;;;;;;;;;;;:::i;:::-;;;;;;;;;2787:30;2834:8;:15;2820:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2787:63;;2866:9;2861:120;2885:8;:15;2881:1;:19;2861:120;;;2940:30;2950:8;2959:1;2950:11;;;;;;;;;;;;;;;;;;;;;;2963:3;2967:1;2963:6;;;;;;;;;;;;;;;;;;;;;;2940:9;:30::i;:::-;2921:13;2935:1;2921:16;;;;;;;;;;;;;;;;;;;;;:49;;;;;2902:3;;;;:::i;:::-;;;2861:120;;;;2998:13;2991:20;;;2488:530;;;;:::o;273:25:2:-;;;;:::o;245:21::-;;;;;;;;;;;;;:::o;3086:306:3:-;3204:8;3188:24;;:12;:10;:12::i;:::-;:24;;;;3180:78;;;;;;;;;;;;:::i;:::-;;;;;;;;;3314:8;3269:18;:32;3288:12;:10;:12::i;:::-;3269:32;;;;;;;;;;;;;;;:42;3302:8;3269:42;;;;;;;;;;;;;;;;:53;;;;;;;;;;;;;;;;;;3366:8;3337:48;;3352:12;:10;:12::i;:::-;3337:48;;;3376:8;3337:48;;;;;;:::i;:::-;;;;;;;;3086:306;;:::o;487:515:2:-;534:25;578:1;562:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;534:47;;591:21;631:1;615:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;591:43;;650:6;645:115;671:1;662;:11;645:115;;;713:1;711;:3;;;;:::i;:::-;694:11;706:1;694:14;;;;;;;;;;;;;;;;;;;;;:20;;;;;742:7;729;737:1;729:10;;;;;;;;;;;;;;;;;;;;;:20;;;;;675:3;;;;:::i;:::-;;;645:115;;;;785:4;;;;;;;;;;;778:25;;;804:10;824:4;831:7;778:61;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;770:109;;;;;;;;;;;;:::i;:::-;;;;;;;;;889:106;913:10;937:11;962:7;889:106;;;;;;;;;;;;:10;:106::i;:::-;487:515;;;:::o;3459:166:3:-;3558:4;3581:18;:27;3600:7;3581:27;;;;;;;;;;;;;;;:37;3609:8;3581:37;;;;;;;;;;;;;;;;;;;;;;;;;3574:44;;3459:166;;;;:::o;3692:955::-;3921:1;3907:16;;:2;:16;;;;3899:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;4004:12;:10;:12::i;:::-;3996:20;;:4;:20;;;:60;;;;4020:36;4037:4;4043:12;:10;:12::i;:::-;4020:16;:36::i;:::-;3996:60;3975:148;;;;;;;;;;;;:::i;:::-;;;;;;;;;4134:16;4153:12;:10;:12::i;:::-;4134:31;;4176:96;4197:8;4207:4;4213:2;4217:21;4235:2;4217:17;:21::i;:::-;4240:25;4258:6;4240:17;:25::i;:::-;4267:4;4176:20;:96::i;:::-;4283:19;4305:9;:13;4315:2;4305:13;;;;;;;;;;;:19;4319:4;4305:19;;;;;;;;;;;;;;;;4283:41;;4357:6;4342:11;:21;;4334:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;4456:6;4442:11;:20;;;;:::i;:::-;4420:9;:13;4430:2;4420:13;;;;;;;;;;;:19;4434:4;4420:19;;;;;;;;;;;;;;;:42;;;;4493:6;4472:9;:13;4482:2;4472:13;;;;;;;;;;;:17;4486:2;4472:17;;;;;;;;;;;;;;;;:27;;;;;;;:::i;:::-;;;;;;;;4546:2;4515:46;;4540:4;4515:46;;4530:8;4515:46;;;4550:2;4554:6;4515:46;;;;;;;:::i;:::-;;;;;;;;4572:68;4603:8;4613:4;4619:2;4623;4627:6;4635:4;4572:30;:68::i;:::-;3692:955;;;;;;;:::o;763:155:11:-;848:4;886:25;871:40;;;:11;:40;;;;864:47;;763:155;;;:::o;9820:819:3:-;9959:1;9940:21;;:7;:21;;;;9932:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;10033:7;:14;10019:3;:10;:28;10011:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;10103:16;10122:12;:10;:12::i;:::-;10103:31;;10145:69;10166:8;10176:7;10193:1;10197:3;10202:7;10145:69;;;;;;;;;;;;:20;:69::i;:::-;10230:6;10225:334;10246:3;:10;10242:1;:14;10225:334;;;10277:10;10290:3;10294:1;10290:6;;;;;;;;;;;;;;;;;;;;;;10277:19;;10310:14;10327:7;10335:1;10327:10;;;;;;;;;;;;;;;;;;;;;;10310:27;;10352:22;10377:9;:13;10387:2;10377:13;;;;;;;;;;;:22;10391:7;10377:22;;;;;;;;;;;;;;;;10352:47;;10439:6;10421:14;:24;;10413:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;10542:6;10525:14;:23;;;;:::i;:::-;10500:9;:13;10510:2;10500:13;;;;;;;;;;;:22;10514:7;10500:22;;;;;;;;;;;;;;;:48;;;;10225:334;;;10258:3;;;;;:::i;:::-;;;;10225:334;;;;10615:1;10574:58;;10598:7;10574:58;;10588:8;10574:58;;;10619:3;10624:7;10574:58;;;;;;;:::i;:::-;;;;;;;;9820:819;;;;:::o;586:96:10:-;639:7;665:10;658:17;;586:96;:::o;11573:235:3:-;;;;;;;:::o;12561:778::-;12805:15;:2;:13;;;:15::i;:::-;12801:532;;;12857:2;12840:43;;;12884:8;12894:4;12900:3;12905:7;12914:4;12840:79;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;12836:487;;;;:::i;:::-;;;;;;;;13199:6;13192:14;;;;;;;;;;;:::i;:::-;;;;;;;;12836:487;13246:62;;;;;;;;;;:::i;:::-;;;;;;;;12836:487;12980:52;;;12968:64;;;:8;:64;;;;12964:161;;13056:50;;;;;;;;;;:::i;:::-;;;;;;;;12964:161;12920:219;12801:532;12561:778;;;;;;:::o;8110:674::-;8258:1;8244:16;;:2;:16;;;;8236:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;8330:7;:14;8316:3;:10;:28;8308:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;8400:16;8419:12;:10;:12::i;:::-;8400:31;;8442:66;8463:8;8481:1;8485:2;8489:3;8494:7;8503:4;8442:20;:66::i;:::-;8524:6;8519:98;8540:3;:10;8536:1;:14;8519:98;;;8596:7;8604:1;8596:10;;;;;;;;;;;;;;;;;;;;;;8571:9;:17;8581:3;8585:1;8581:6;;;;;;;;;;;;;;;;;;;;;;8571:17;;;;;;;;;;;:21;8589:2;8571:21;;;;;;;;;;;;;;;;:35;;;;;;;:::i;:::-;;;;;;;;8552:3;;;;;:::i;:::-;;;;8519:98;;;;8668:2;8632:53;;8664:1;8632:53;;8646:8;8632:53;;;8672:3;8677:7;8632:53;;;;;;;:::i;:::-;;;;;;;;8696:81;8732:8;8750:1;8754:2;8758:3;8763:7;8772:4;8696:35;:81::i;:::-;8110:674;;;;;:::o;13345:193::-;13411:16;13439:22;13478:1;13464:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13439:41;;13501:7;13490:5;13496:1;13490:8;;;;;;;;;;;;;;;;;;;;;:18;;;;;13526:5;13519:12;;;13345:193;;;:::o;11814:741::-;12033:15;:2;:13;;;:15::i;:::-;12029:520;;;12085:2;12068:38;;;12107:8;12117:4;12123:2;12127:6;12135:4;12068:72;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;12064:475;;;;:::i;:::-;;;;;;;;12415:6;12408:14;;;;;;;;;;;:::i;:::-;;;;;;;;12064:475;12462:62;;;;;;;;;;:::i;:::-;;;;;;;;12064:475;12201:47;;;12189:59;;;:8;:59;;;;12185:156;;12272:50;;;;;;;;;;:::i;:::-;;;;;;;;12185:156;12141:214;12029:520;11814:741;;;;;;:::o;718:413:9:-;778:4;981:12;1090:7;1078:20;1070:28;;1123:1;1116:4;:8;1109:15;;;718:413;;;:::o;24:622:13:-;;145:80;160:64;217:6;160:64;:::i;:::-;145:80;:::i;:::-;136:89;;245:5;273:6;266:5;259:21;299:4;292:5;288:16;281:23;;324:6;374:3;366:4;358:6;354:17;349:3;345:27;342:36;339:2;;;391:1;388;381:12;339:2;419:1;404:236;429:6;426:1;423:13;404:236;;;496:3;524:37;557:3;545:10;524:37;:::i;:::-;519:3;512:50;591:4;586:3;582:14;575:21;;625:4;620:3;616:14;609:21;;464:176;451:1;448;444:9;439:14;;404:236;;;408:14;126:520;;;;;;;:::o;669:622::-;;790:80;805:64;862:6;805:64;:::i;:::-;790:80;:::i;:::-;781:89;;890:5;918:6;911:5;904:21;944:4;937:5;933:16;926:23;;969:6;1019:3;1011:4;1003:6;999:17;994:3;990:27;987:36;984:2;;;1036:1;1033;1026:12;984:2;1064:1;1049:236;1074:6;1071:1;1068:13;1049:236;;;1141:3;1169:37;1202:3;1190:10;1169:37;:::i;:::-;1164:3;1157:50;1236:4;1231:3;1227:14;1220:21;;1270:4;1265:3;1261:14;1254:21;;1109:176;1096:1;1093;1089:9;1084:14;;1049:236;;;1053:14;771:520;;;;;;;:::o;1297:342::-;;1399:64;1414:48;1455:6;1414:48;:::i;:::-;1399:64;:::i;:::-;1390:73;;1486:6;1479:5;1472:21;1524:4;1517:5;1513:16;1562:3;1553:6;1548:3;1544:16;1541:25;1538:2;;;1579:1;1576;1569:12;1538:2;1592:41;1626:6;1621:3;1616;1592:41;:::i;:::-;1380:259;;;;;;:::o;1645:139::-;;1729:6;1716:20;1707:29;;1745:33;1772:5;1745:33;:::i;:::-;1697:87;;;;:::o;1807:303::-;;1927:3;1920:4;1912:6;1908:17;1904:27;1894:2;;1945:1;1942;1935:12;1894:2;1985:6;1972:20;2010:94;2100:3;2092:6;2085:4;2077:6;2073:17;2010:94;:::i;:::-;2001:103;;1884:226;;;;;:::o;2133:303::-;;2253:3;2246:4;2238:6;2234:17;2230:27;2220:2;;2271:1;2268;2261:12;2220:2;2311:6;2298:20;2336:94;2426:3;2418:6;2411:4;2403:6;2399:17;2336:94;:::i;:::-;2327:103;;2210:226;;;;;:::o;2442:133::-;;2523:6;2510:20;2501:29;;2539:30;2563:5;2539:30;:::i;:::-;2491:84;;;;:::o;2581:137::-;;2666:6;2660:13;2651:22;;2682:30;2706:5;2682:30;:::i;:::-;2641:77;;;;:::o;2724:137::-;;2807:6;2794:20;2785:29;;2823:32;2849:5;2823:32;:::i;:::-;2775:86;;;;:::o;2867:141::-;;2954:6;2948:13;2939:22;;2970:32;2996:5;2970:32;:::i;:::-;2929:79;;;;:::o;3027:271::-;;3131:3;3124:4;3116:6;3112:17;3108:27;3098:2;;3149:1;3146;3139:12;3098:2;3189:6;3176:20;3214:78;3288:3;3280:6;3273:4;3265:6;3261:17;3214:78;:::i;:::-;3205:87;;3088:210;;;;;:::o;3304:139::-;;3388:6;3375:20;3366:29;;3404:33;3431:5;3404:33;:::i;:::-;3356:87;;;;:::o;3449:407::-;;;3574:2;3562:9;3553:7;3549:23;3545:32;3542:2;;;3590:1;3587;3580:12;3542:2;3633:1;3658:53;3703:7;3694:6;3683:9;3679:22;3658:53;:::i;:::-;3648:63;;3604:117;3760:2;3786:53;3831:7;3822:6;3811:9;3807:22;3786:53;:::i;:::-;3776:63;;3731:118;3532:324;;;;;:::o;3862:1241::-;;;;;;4097:3;4085:9;4076:7;4072:23;4068:33;4065:2;;;4114:1;4111;4104:12;4065:2;4157:1;4182:53;4227:7;4218:6;4207:9;4203:22;4182:53;:::i;:::-;4172:63;;4128:117;4284:2;4310:53;4355:7;4346:6;4335:9;4331:22;4310:53;:::i;:::-;4300:63;;4255:118;4440:2;4429:9;4425:18;4412:32;4471:18;4463:6;4460:30;4457:2;;;4503:1;4500;4493:12;4457:2;4531:78;4601:7;4592:6;4581:9;4577:22;4531:78;:::i;:::-;4521:88;;4383:236;4686:2;4675:9;4671:18;4658:32;4717:18;4709:6;4706:30;4703:2;;;4749:1;4746;4739:12;4703:2;4777:78;4847:7;4838:6;4827:9;4823:22;4777:78;:::i;:::-;4767:88;;4629:236;4932:3;4921:9;4917:19;4904:33;4964:18;4956:6;4953:30;4950:2;;;4996:1;4993;4986:12;4950:2;5024:62;5078:7;5069:6;5058:9;5054:22;5024:62;:::i;:::-;5014:72;;4875:221;4055:1048;;;;;;;;:::o;5109:955::-;;;;;;5294:3;5282:9;5273:7;5269:23;5265:33;5262:2;;;5311:1;5308;5301:12;5262:2;5354:1;5379:53;5424:7;5415:6;5404:9;5400:22;5379:53;:::i;:::-;5369:63;;5325:117;5481:2;5507:53;5552:7;5543:6;5532:9;5528:22;5507:53;:::i;:::-;5497:63;;5452:118;5609:2;5635:53;5680:7;5671:6;5660:9;5656:22;5635:53;:::i;:::-;5625:63;;5580:118;5737:2;5763:53;5808:7;5799:6;5788:9;5784:22;5763:53;:::i;:::-;5753:63;;5708:118;5893:3;5882:9;5878:19;5865:33;5925:18;5917:6;5914:30;5911:2;;;5957:1;5954;5947:12;5911:2;5985:62;6039:7;6030:6;6019:9;6015:22;5985:62;:::i;:::-;5975:72;;5836:221;5252:812;;;;;;;;:::o;6070:401::-;;;6192:2;6180:9;6171:7;6167:23;6163:32;6160:2;;;6208:1;6205;6198:12;6160:2;6251:1;6276:53;6321:7;6312:6;6301:9;6297:22;6276:53;:::i;:::-;6266:63;;6222:117;6378:2;6404:50;6446:7;6437:6;6426:9;6422:22;6404:50;:::i;:::-;6394:60;;6349:115;6150:321;;;;;:::o;6477:407::-;;;6602:2;6590:9;6581:7;6577:23;6573:32;6570:2;;;6618:1;6615;6608:12;6570:2;6661:1;6686:53;6731:7;6722:6;6711:9;6707:22;6686:53;:::i;:::-;6676:63;;6632:117;6788:2;6814:53;6859:7;6850:6;6839:9;6835:22;6814:53;:::i;:::-;6804:63;;6759:118;6560:324;;;;;:::o;6890:693::-;;;7065:2;7053:9;7044:7;7040:23;7036:32;7033:2;;;7081:1;7078;7071:12;7033:2;7152:1;7141:9;7137:17;7124:31;7182:18;7174:6;7171:30;7168:2;;;7214:1;7211;7204:12;7168:2;7242:78;7312:7;7303:6;7292:9;7288:22;7242:78;:::i;:::-;7232:88;;7095:235;7397:2;7386:9;7382:18;7369:32;7428:18;7420:6;7417:30;7414:2;;;7460:1;7457;7450:12;7414:2;7488:78;7558:7;7549:6;7538:9;7534:22;7488:78;:::i;:::-;7478:88;;7340:236;7023:560;;;;;:::o;7589:278::-;;7705:2;7693:9;7684:7;7680:23;7676:32;7673:2;;;7721:1;7718;7711:12;7673:2;7764:1;7789:61;7842:7;7833:6;7822:9;7818:22;7789:61;:::i;:::-;7779:71;;7735:125;7663:204;;;;:::o;7873:260::-;;7980:2;7968:9;7959:7;7955:23;7951:32;7948:2;;;7996:1;7993;7986:12;7948:2;8039:1;8064:52;8108:7;8099:6;8088:9;8084:22;8064:52;:::i;:::-;8054:62;;8010:116;7938:195;;;;:::o;8139:282::-;;8257:2;8245:9;8236:7;8232:23;8228:32;8225:2;;;8273:1;8270;8263:12;8225:2;8316:1;8341:63;8396:7;8387:6;8376:9;8372:22;8341:63;:::i;:::-;8331:73;;8287:127;8215:206;;;;:::o;8427:262::-;;8535:2;8523:9;8514:7;8510:23;8506:32;8503:2;;;8551:1;8548;8541:12;8503:2;8594:1;8619:53;8664:7;8655:6;8644:9;8640:22;8619:53;:::i;:::-;8609:63;;8565:117;8493:196;;;;:::o;8695:179::-;;8785:46;8827:3;8819:6;8785:46;:::i;:::-;8863:4;8858:3;8854:14;8840:28;;8775:99;;;;:::o;8880:118::-;8967:24;8985:5;8967:24;:::i;:::-;8962:3;8955:37;8945:53;;:::o;9034:732::-;;9182:54;9230:5;9182:54;:::i;:::-;9252:86;9331:6;9326:3;9252:86;:::i;:::-;9245:93;;9362:56;9412:5;9362:56;:::i;:::-;9441:7;9472:1;9457:284;9482:6;9479:1;9476:13;9457:284;;;9558:6;9552:13;9585:63;9644:3;9629:13;9585:63;:::i;:::-;9578:70;;9671:60;9724:6;9671:60;:::i;:::-;9661:70;;9517:224;9504:1;9501;9497:9;9492:14;;9457:284;;;9461:14;9757:3;9750:10;;9158:608;;;;;;;:::o;9772:109::-;9853:21;9868:5;9853:21;:::i;:::-;9848:3;9841:34;9831:50;;:::o;9887:118::-;9974:24;9992:5;9974:24;:::i;:::-;9969:3;9962:37;9952:53;;:::o;10011:360::-;;10125:38;10157:5;10125:38;:::i;:::-;10179:70;10242:6;10237:3;10179:70;:::i;:::-;10172:77;;10258:52;10303:6;10298:3;10291:4;10284:5;10280:16;10258:52;:::i;:::-;10335:29;10357:6;10335:29;:::i;:::-;10330:3;10326:39;10319:46;;10101:270;;;;;:::o;10377:364::-;;10493:39;10526:5;10493:39;:::i;:::-;10548:71;10612:6;10607:3;10548:71;:::i;:::-;10541:78;;10628:52;10673:6;10668:3;10661:4;10654:5;10650:16;10628:52;:::i;:::-;10705:29;10727:6;10705:29;:::i;:::-;10700:3;10696:39;10689:46;;10469:272;;;;;:::o;10747:384::-;;10910:67;10974:2;10969:3;10910:67;:::i;:::-;10903:74;;11007:34;11003:1;10998:3;10994:11;10987:55;11073:22;11068:2;11063:3;11059:12;11052:44;11122:2;11117:3;11113:12;11106:19;;10893:238;;;:::o;11137:372::-;;11300:67;11364:2;11359:3;11300:67;:::i;:::-;11293:74;;11397:34;11393:1;11388:3;11384:11;11377:55;11463:10;11458:2;11453:3;11449:12;11442:32;11500:2;11495:3;11491:12;11484:19;;11283:226;;;:::o;11515:368::-;;11678:67;11742:2;11737:3;11678:67;:::i;:::-;11671:74;;11775:34;11771:1;11766:3;11762:11;11755:55;11841:6;11836:2;11831:3;11827:12;11820:28;11874:2;11869:3;11865:12;11858:19;;11661:222;;;:::o;11889:375::-;;12052:67;12116:2;12111:3;12052:67;:::i;:::-;12045:74;;12149:34;12145:1;12140:3;12136:11;12129:55;12215:13;12210:2;12205:3;12201:12;12194:35;12255:2;12250:3;12246:12;12239:19;;12035:229;;;:::o;12270:368::-;;12433:67;12497:2;12492:3;12433:67;:::i;:::-;12426:74;;12530:34;12526:1;12521:3;12517:11;12510:55;12596:6;12591:2;12586:3;12582:12;12575:28;12629:2;12624:3;12620:12;12613:19;;12416:222;;;:::o;12644:373::-;;12807:67;12871:2;12866:3;12807:67;:::i;:::-;12800:74;;12904:34;12900:1;12895:3;12891:11;12884:55;12970:11;12965:2;12960:3;12956:12;12949:33;13008:2;13003:3;12999:12;12992:19;;12790:227;;;:::o;13023:369::-;;13186:67;13250:2;13245:3;13186:67;:::i;:::-;13179:74;;13283:34;13279:1;13274:3;13270:11;13263:55;13349:7;13344:2;13339:3;13335:12;13328:29;13383:2;13378:3;13374:12;13367:19;;13169:223;;;:::o;13398:382::-;;13561:67;13625:2;13620:3;13561:67;:::i;:::-;13554:74;;13658:34;13654:1;13649:3;13645:11;13638:55;13724:20;13719:2;13714:3;13710:12;13703:42;13771:2;13766:3;13762:12;13755:19;;13544:236;;;:::o;13786:367::-;;13949:67;14013:2;14008:3;13949:67;:::i;:::-;13942:74;;14046:34;14042:1;14037:3;14033:11;14026:55;14112:5;14107:2;14102:3;14098:12;14091:27;14144:2;14139:3;14135:12;14128:19;;13932:221;;;:::o;14159:367::-;;14322:67;14386:2;14381:3;14322:67;:::i;:::-;14315:74;;14419:34;14415:1;14410:3;14406:11;14399:55;14485:5;14480:2;14475:3;14471:12;14464:27;14517:2;14512:3;14508:12;14501:19;;14305:221;;;:::o;14532:374::-;;14695:67;14759:2;14754:3;14695:67;:::i;:::-;14688:74;;14792:34;14788:1;14783:3;14779:11;14772:55;14858:12;14853:2;14848:3;14844:12;14837:34;14897:2;14892:3;14888:12;14881:19;;14678:228;;;:::o;14912:373::-;;15075:67;15139:2;15134:3;15075:67;:::i;:::-;15068:74;;15172:34;15168:1;15163:3;15159:11;15152:55;15238:11;15233:2;15228:3;15224:12;15217:33;15276:2;15271:3;15267:12;15260:19;;15058:227;;;:::o;15291:373::-;;15454:67;15518:2;15513:3;15454:67;:::i;:::-;15447:74;;15551:34;15547:1;15542:3;15538:11;15531:55;15617:11;15612:2;15607:3;15603:12;15596:33;15655:2;15650:3;15646:12;15639:19;;15437:227;;;:::o;15670:372::-;;15833:67;15897:2;15892:3;15833:67;:::i;:::-;15826:74;;15930:34;15926:1;15921:3;15917:11;15910:55;15996:10;15991:2;15986:3;15982:12;15975:32;16033:2;16028:3;16024:12;16017:19;;15816:226;;;:::o;16048:365::-;;16211:67;16275:2;16270:3;16211:67;:::i;:::-;16204:74;;16308:34;16304:1;16299:3;16295:11;16288:55;16374:3;16369:2;16364:3;16360:12;16353:25;16404:2;16399:3;16395:12;16388:19;;16194:219;;;:::o;16419:108::-;16496:24;16514:5;16496:24;:::i;:::-;16491:3;16484:37;16474:53;;:::o;16533:118::-;16620:24;16638:5;16620:24;:::i;:::-;16615:3;16608:37;16598:53;;:::o;16657:222::-;;16788:2;16777:9;16773:18;16765:26;;16801:71;16869:1;16858:9;16854:17;16845:6;16801:71;:::i;:::-;16755:124;;;;:::o;16885:1053::-;;17246:3;17235:9;17231:19;17223:27;;17260:71;17328:1;17317:9;17313:17;17304:6;17260:71;:::i;:::-;17341:72;17409:2;17398:9;17394:18;17385:6;17341:72;:::i;:::-;17460:9;17454:4;17450:20;17445:2;17434:9;17430:18;17423:48;17488:108;17591:4;17582:6;17488:108;:::i;:::-;17480:116;;17643:9;17637:4;17633:20;17628:2;17617:9;17613:18;17606:48;17671:108;17774:4;17765:6;17671:108;:::i;:::-;17663:116;;17827:9;17821:4;17817:20;17811:3;17800:9;17796:19;17789:49;17855:76;17926:4;17917:6;17855:76;:::i;:::-;17847:84;;17213:725;;;;;;;;:::o;17944:442::-;;18131:2;18120:9;18116:18;18108:26;;18144:71;18212:1;18201:9;18197:17;18188:6;18144:71;:::i;:::-;18225:72;18293:2;18282:9;18278:18;18269:6;18225:72;:::i;:::-;18307;18375:2;18364:9;18360:18;18351:6;18307:72;:::i;:::-;18098:288;;;;;;:::o;18392:751::-;;18653:3;18642:9;18638:19;18630:27;;18667:71;18735:1;18724:9;18720:17;18711:6;18667:71;:::i;:::-;18748:72;18816:2;18805:9;18801:18;18792:6;18748:72;:::i;:::-;18830;18898:2;18887:9;18883:18;18874:6;18830:72;:::i;:::-;18912;18980:2;18969:9;18965:18;18956:6;18912:72;:::i;:::-;19032:9;19026:4;19022:20;19016:3;19005:9;19001:19;18994:49;19060:76;19131:4;19122:6;19060:76;:::i;:::-;19052:84;;18620:523;;;;;;;;:::o;19149:332::-;;19308:2;19297:9;19293:18;19285:26;;19321:71;19389:1;19378:9;19374:17;19365:6;19321:71;:::i;:::-;19402:72;19470:2;19459:9;19455:18;19446:6;19402:72;:::i;:::-;19275:206;;;;;:::o;19487:373::-;;19668:2;19657:9;19653:18;19645:26;;19717:9;19711:4;19707:20;19703:1;19692:9;19688:17;19681:47;19745:108;19848:4;19839:6;19745:108;:::i;:::-;19737:116;;19635:225;;;;:::o;19866:634::-;;20125:2;20114:9;20110:18;20102:26;;20174:9;20168:4;20164:20;20160:1;20149:9;20145:17;20138:47;20202:108;20305:4;20296:6;20202:108;:::i;:::-;20194:116;;20357:9;20351:4;20347:20;20342:2;20331:9;20327:18;20320:48;20385:108;20488:4;20479:6;20385:108;:::i;:::-;20377:116;;20092:408;;;;;:::o;20506:210::-;;20631:2;20620:9;20616:18;20608:26;;20644:65;20706:1;20695:9;20691:17;20682:6;20644:65;:::i;:::-;20598:118;;;;:::o;20722:222::-;;20853:2;20842:9;20838:18;20830:26;;20866:71;20934:1;20923:9;20919:17;20910:6;20866:71;:::i;:::-;20820:124;;;;:::o;20950:313::-;;21101:2;21090:9;21086:18;21078:26;;21150:9;21144:4;21140:20;21136:1;21125:9;21121:17;21114:47;21178:78;21251:4;21242:6;21178:78;:::i;:::-;21170:86;;21068:195;;;;:::o;21269:419::-;;21473:2;21462:9;21458:18;21450:26;;21522:9;21516:4;21512:20;21508:1;21497:9;21493:17;21486:47;21550:131;21676:4;21550:131;:::i;:::-;21542:139;;21440:248;;;:::o;21694:419::-;;21898:2;21887:9;21883:18;21875:26;;21947:9;21941:4;21937:20;21933:1;21922:9;21918:17;21911:47;21975:131;22101:4;21975:131;:::i;:::-;21967:139;;21865:248;;;:::o;22119:419::-;;22323:2;22312:9;22308:18;22300:26;;22372:9;22366:4;22362:20;22358:1;22347:9;22343:17;22336:47;22400:131;22526:4;22400:131;:::i;:::-;22392:139;;22290:248;;;:::o;22544:419::-;;22748:2;22737:9;22733:18;22725:26;;22797:9;22791:4;22787:20;22783:1;22772:9;22768:17;22761:47;22825:131;22951:4;22825:131;:::i;:::-;22817:139;;22715:248;;;:::o;22969:419::-;;23173:2;23162:9;23158:18;23150:26;;23222:9;23216:4;23212:20;23208:1;23197:9;23193:17;23186:47;23250:131;23376:4;23250:131;:::i;:::-;23242:139;;23140:248;;;:::o;23394:419::-;;23598:2;23587:9;23583:18;23575:26;;23647:9;23641:4;23637:20;23633:1;23622:9;23618:17;23611:47;23675:131;23801:4;23675:131;:::i;:::-;23667:139;;23565:248;;;:::o;23819:419::-;;24023:2;24012:9;24008:18;24000:26;;24072:9;24066:4;24062:20;24058:1;24047:9;24043:17;24036:47;24100:131;24226:4;24100:131;:::i;:::-;24092:139;;23990:248;;;:::o;24244:419::-;;24448:2;24437:9;24433:18;24425:26;;24497:9;24491:4;24487:20;24483:1;24472:9;24468:17;24461:47;24525:131;24651:4;24525:131;:::i;:::-;24517:139;;24415:248;;;:::o;24669:419::-;;24873:2;24862:9;24858:18;24850:26;;24922:9;24916:4;24912:20;24908:1;24897:9;24893:17;24886:47;24950:131;25076:4;24950:131;:::i;:::-;24942:139;;24840:248;;;:::o;25094:419::-;;25298:2;25287:9;25283:18;25275:26;;25347:9;25341:4;25337:20;25333:1;25322:9;25318:17;25311:47;25375:131;25501:4;25375:131;:::i;:::-;25367:139;;25265:248;;;:::o;25519:419::-;;25723:2;25712:9;25708:18;25700:26;;25772:9;25766:4;25762:20;25758:1;25747:9;25743:17;25736:47;25800:131;25926:4;25800:131;:::i;:::-;25792:139;;25690:248;;;:::o;25944:419::-;;26148:2;26137:9;26133:18;26125:26;;26197:9;26191:4;26187:20;26183:1;26172:9;26168:17;26161:47;26225:131;26351:4;26225:131;:::i;:::-;26217:139;;26115:248;;;:::o;26369:419::-;;26573:2;26562:9;26558:18;26550:26;;26622:9;26616:4;26612:20;26608:1;26597:9;26593:17;26586:47;26650:131;26776:4;26650:131;:::i;:::-;26642:139;;26540:248;;;:::o;26794:419::-;;26998:2;26987:9;26983:18;26975:26;;27047:9;27041:4;27037:20;27033:1;27022:9;27018:17;27011:47;27075:131;27201:4;27075:131;:::i;:::-;27067:139;;26965:248;;;:::o;27219:419::-;;27423:2;27412:9;27408:18;27400:26;;27472:9;27466:4;27462:20;27458:1;27447:9;27443:17;27436:47;27500:131;27626:4;27500:131;:::i;:::-;27492:139;;27390:248;;;:::o;27644:222::-;;27775:2;27764:9;27760:18;27752:26;;27788:71;27856:1;27845:9;27841:17;27832:6;27788:71;:::i;:::-;27742:124;;;;:::o;27872:332::-;;28031:2;28020:9;28016:18;28008:26;;28044:71;28112:1;28101:9;28097:17;28088:6;28044:71;:::i;:::-;28125:72;28193:2;28182:9;28178:18;28169:6;28125:72;:::i;:::-;27998:206;;;;;:::o;28210:283::-;;28276:2;28270:9;28260:19;;28318:4;28310:6;28306:17;28425:6;28413:10;28410:22;28389:18;28377:10;28374:34;28371:62;28368:2;;;28436:18;;:::i;:::-;28368:2;28476:10;28472:2;28465:22;28250:243;;;;:::o;28499:311::-;;28666:18;28658:6;28655:30;28652:2;;;28688:18;;:::i;:::-;28652:2;28738:4;28730:6;28726:17;28718:25;;28798:4;28792;28788:15;28780:23;;28581:229;;;:::o;28816:311::-;;28983:18;28975:6;28972:30;28969:2;;;29005:18;;:::i;:::-;28969:2;29055:4;29047:6;29043:17;29035:25;;29115:4;29109;29105:15;29097:23;;28898:229;;;:::o;29133:331::-;;29284:18;29276:6;29273:30;29270:2;;;29306:18;;:::i;:::-;29270:2;29391:4;29387:9;29380:4;29372:6;29368:17;29364:33;29356:41;;29452:4;29446;29442:15;29434:23;;29199:265;;;:::o;29470:132::-;;29560:3;29552:11;;29590:4;29585:3;29581:14;29573:22;;29542:60;;;:::o;29608:114::-;;29709:5;29703:12;29693:22;;29682:40;;;:::o;29728:98::-;;29813:5;29807:12;29797:22;;29786:40;;;:::o;29832:99::-;;29918:5;29912:12;29902:22;;29891:40;;;:::o;29937:113::-;;30039:4;30034:3;30030:14;30022:22;;30012:38;;;:::o;30056:184::-;;30189:6;30184:3;30177:19;30229:4;30224:3;30220:14;30205:29;;30167:73;;;;:::o;30246:168::-;;30363:6;30358:3;30351:19;30403:4;30398:3;30394:14;30379:29;;30341:73;;;;:::o;30420:169::-;;30538:6;30533:3;30526:19;30578:4;30573:3;30569:14;30554:29;;30516:73;;;;:::o;30595:305::-;;30654:20;30672:1;30654:20;:::i;:::-;30649:25;;30688:20;30706:1;30688:20;:::i;:::-;30683:25;;30842:1;30774:66;30770:74;30767:1;30764:81;30761:2;;;30848:18;;:::i;:::-;30761:2;30892:1;30889;30885:9;30878:16;;30639:261;;;;:::o;30906:191::-;;30966:20;30984:1;30966:20;:::i;:::-;30961:25;;31000:20;31018:1;31000:20;:::i;:::-;30995:25;;31039:1;31036;31033:8;31030:2;;;31044:18;;:::i;:::-;31030:2;31089:1;31086;31082:9;31074:17;;30951:146;;;;:::o;31103:96::-;;31169:24;31187:5;31169:24;:::i;:::-;31158:35;;31148:51;;;:::o;31205:90::-;;31282:5;31275:13;31268:21;31257:32;;31247:48;;;:::o;31301:77::-;;31367:5;31356:16;;31346:32;;;:::o;31384:149::-;;31460:66;31453:5;31449:78;31438:89;;31428:105;;;:::o;31539:126::-;;31616:42;31609:5;31605:54;31594:65;;31584:81;;;:::o;31671:77::-;;31737:5;31726:16;;31716:32;;;:::o;31754:154::-;31838:6;31833:3;31828;31815:30;31900:1;31891:6;31886:3;31882:16;31875:27;31805:103;;;:::o;31914:307::-;31982:1;31992:113;32006:6;32003:1;32000:13;31992:113;;;32091:1;32086:3;32082:11;32076:18;32072:1;32067:3;32063:11;32056:39;32028:2;32025:1;32021:10;32016:15;;31992:113;;;32123:6;32120:1;32117:13;32114:2;;;32203:1;32194:6;32189:3;32185:16;32178:27;32114:2;31963:258;;;;:::o;32227:320::-;;32308:1;32302:4;32298:12;32288:22;;32355:1;32349:4;32345:12;32376:18;32366:2;;32432:4;32424:6;32420:17;32410:27;;32366:2;32494;32486:6;32483:14;32463:18;32460:38;32457:2;;;32513:18;;:::i;:::-;32457:2;32278:269;;;;:::o;32553:233::-;;32615:24;32633:5;32615:24;:::i;:::-;32606:33;;32661:66;32654:5;32651:77;32648:2;;;32731:18;;:::i;:::-;32648:2;32778:1;32771:5;32767:13;32760:20;;32596:190;;;:::o;32792:180::-;32840:77;32837:1;32830:88;32937:4;32934:1;32927:15;32961:4;32958:1;32951:15;32978:180;33026:77;33023:1;33016:88;33123:4;33120:1;33113:15;33147:4;33144:1;33137:15;33164:180;33212:77;33209:1;33202:88;33309:4;33306:1;33299:15;33333:4;33330:1;33323:15;33350:102;;33442:2;33438:7;33433:2;33426:5;33422:14;33418:28;33408:38;;33398:54;;;:::o;33458:106::-;;33551:5;33546:3;33542:15;33521:36;;33511:53;;;:::o;33570:833::-;;33647:4;33629:16;33626:26;33623:2;;;33655:5;;33623:2;33693:1;33690;33687;33672:23;33715:34;33746:1;33740:8;33715:34;:::i;:::-;33776:10;33771:3;33768:19;33758:2;;33791:5;;;33758:2;33826;33820:9;33884:1;33866:16;33862:24;33859:1;33853:4;33838:49;33917:4;33911:11;34016:16;34009:4;34001:6;33997:17;33994:39;33961:18;33953:6;33950:30;33934:113;33931:2;;;34062:5;;;;;33931:2;34108:6;34102:4;34098:17;34144:3;34138:10;34171:18;34163:6;34160:30;34157:2;;;34193:5;;;;;;;34157:2;34241:6;34234:4;34229:3;34225:14;34221:27;34278:16;34272:4;34268:27;34263:3;34260:36;34257:2;;;34299:5;;;;;;;;34257:2;34347:29;34369:6;34347:29;:::i;:::-;34340:4;34335:3;34331:14;34327:50;34323:2;34316:62;34394:3;34387:10;;33613:790;;;;;;;;:::o;34409:122::-;34482:24;34500:5;34482:24;:::i;:::-;34475:5;34472:35;34462:2;;34521:1;34518;34511:12;34462:2;34452:79;:::o;34537:116::-;34607:21;34622:5;34607:21;:::i;:::-;34600:5;34597:32;34587:2;;34643:1;34640;34633:12;34587:2;34577:76;:::o;34659:120::-;34731:23;34748:5;34731:23;:::i;:::-;34724:5;34721:34;34711:2;;34769:1;34766;34759:12;34711:2;34701:78;:::o;34785:122::-;34858:24;34876:5;34858:24;:::i;:::-;34851:5;34848:35;34838:2;;34897:1;34894;34887:12;34838:2;34828:79;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\ncontract Prediction is ERC1155(\"FREE\") {\n    address public coin;\n    address public oracle; \n    bytes32 public identifier;  \n\n\n    constructor (address _coin) {\n        coin = _coin;\n        oracle = msg.sender;  \n        identifier = keccak256(abi.encodePacked(oracle, \"Heads or Tails\", uint(2)));\n    }\n\n    function buySet(uint _amount) public {\n        uint[] memory positionIds = new uint[](uint(2));\n        uint[] memory amounts = new uint[](uint(2));\n\n        for (uint i = 0; i < uint(2); ++i) {\n            positionIds[i] = i+1; \n            amounts[i] = _amount;\n        }\n\n        require(IERC20(coin).transferFrom(msg.sender, address(this), _amount), \"could not receive collateral tokens\");\n        _mintBatch(\n            msg.sender,\n            positionIds,\n            amounts,\n            \"\"\n        );\n    }\n\n    function sellSet(uint _amount) public {\n        uint[] memory positionIds = new uint[](uint(2));\n        uint[] memory amounts = new uint[](uint(2));\n\n        for (uint i = 0; i < uint(2); ++i) {\n            positionIds[i] = i+1; \n            amounts[i] = _amount;\n        }\n\n        _burnBatch(\n            msg.sender,\n            positionIds,\n            amounts\n        );\n        require(IERC20(coin).transfer(msg.sender, _amount), \"could not transfer collateral tokens\");\n    }\n}",
  "sourcePath": "/Users/kylescott/src/simple_prediction/contracts/Prediction.sol",
  "ast": {
    "absolutePath": "/Users/kylescott/src/simple_prediction/contracts/Prediction.sol",
    "exportedSymbols": {
      "Address": [
        2352
      ],
      "Context": [
        2375
      ],
      "ERC1155": [
        1299
      ],
      "ERC165": [
        2399
      ],
      "IERC1155": [
        1421
      ],
      "IERC1155MetadataURI": [
        1477
      ],
      "IERC1155Receiver": [
        1462
      ],
      "IERC165": [
        2411
      ],
      "IERC20": [
        2056
      ],
      "Prediction": [
        266
      ]
    },
    "id": 267,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 56,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:2"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
        "file": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
        "id": 57,
        "nodeType": "ImportDirective",
        "scope": 267,
        "sourceUnit": 1300,
        "src": "57:59:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 58,
        "nodeType": "ImportDirective",
        "scope": 267,
        "sourceUnit": 2057,
        "src": "117:56:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": [
              {
                "hexValue": "46524545",
                "id": 60,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "string",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "206:6:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_stringliteral_4d5814656ab8bb75753e7152c3f06382e112c82b3a83bb5cffd5c8b7bd8dc44d",
                  "typeString": "literal_string \"FREE\""
                },
                "value": "FREE"
              }
            ],
            "baseName": {
              "id": 59,
              "name": "ERC1155",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1299,
              "src": "198:7:2"
            },
            "id": 61,
            "nodeType": "InheritanceSpecifier",
            "src": "198:15:2"
          }
        ],
        "contractDependencies": [
          1299,
          1421,
          1477,
          2375,
          2399,
          2411
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 266,
        "linearizedBaseContracts": [
          266,
          1299,
          1477,
          1421,
          2399,
          2411,
          2375
        ],
        "name": "Prediction",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "11df9995",
            "id": 63,
            "mutability": "mutable",
            "name": "coin",
            "nodeType": "VariableDeclaration",
            "scope": 266,
            "src": "220:19:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 62,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "220:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "7dc0d1d0",
            "id": 65,
            "mutability": "mutable",
            "name": "oracle",
            "nodeType": "VariableDeclaration",
            "scope": 266,
            "src": "245:21:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 64,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "245:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "7998a1c4",
            "id": 67,
            "mutability": "mutable",
            "name": "identifier",
            "nodeType": "VariableDeclaration",
            "scope": 266,
            "src": "273:25:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 66,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "273:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 95,
              "nodeType": "Block",
              "src": "336:145:2",
              "statements": [
                {
                  "expression": {
                    "id": 74,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 72,
                      "name": "coin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63,
                      "src": "346:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 73,
                      "name": "_coin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 69,
                      "src": "353:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "346:12:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 75,
                  "nodeType": "ExpressionStatement",
                  "src": "346:12:2"
                },
                {
                  "expression": {
                    "id": 79,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 76,
                      "name": "oracle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 65,
                      "src": "368:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 77,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "377:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 78,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "377:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "368:19:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 80,
                  "nodeType": "ExpressionStatement",
                  "src": "368:19:2"
                },
                {
                  "expression": {
                    "id": 93,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 81,
                      "name": "identifier",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 67,
                      "src": "399:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 85,
                              "name": "oracle",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 65,
                              "src": "439:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "hexValue": "4865616473206f72205461696c73",
                              "id": 86,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "447:16:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_0a5316e42a371c930792be9433a9d67ffee1fe00ae59f2e5c7e1f731843ee3f4",
                                "typeString": "literal_string \"Heads or Tails\""
                              },
                              "value": "Heads or Tails"
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "32",
                                  "id": 89,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "470:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_2_by_1",
                                    "typeString": "int_const 2"
                                  },
                                  "value": "2"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_2_by_1",
                                    "typeString": "int_const 2"
                                  }
                                ],
                                "id": 88,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "465:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": {
                                  "id": 87,
                                  "name": "uint",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "465:4:2",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 90,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "465:7:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_0a5316e42a371c930792be9433a9d67ffee1fe00ae59f2e5c7e1f731843ee3f4",
                                "typeString": "literal_string \"Heads or Tails\""
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 83,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967295,
                              "src": "422:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 84,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "encodePacked",
                            "nodeType": "MemberAccess",
                            "src": "422:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 91,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "422:51:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 82,
                        "name": "keccak256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967288,
                        "src": "412:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) pure returns (bytes32)"
                        }
                      },
                      "id": 92,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "412:62:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "399:75:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 94,
                  "nodeType": "ExpressionStatement",
                  "src": "399:75:2"
                }
              ]
            },
            "id": 96,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 70,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 69,
                  "mutability": "mutable",
                  "name": "_coin",
                  "nodeType": "VariableDeclaration",
                  "scope": 96,
                  "src": "321:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 68,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "321:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "320:15:2"
            },
            "returnParameters": {
              "id": 71,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "336:0:2"
            },
            "scope": 266,
            "src": "308:173:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 182,
              "nodeType": "Block",
              "src": "524:478:2",
              "statements": [
                {
                  "assignments": [
                    105
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 105,
                      "mutability": "mutable",
                      "name": "positionIds",
                      "nodeType": "VariableDeclaration",
                      "scope": 182,
                      "src": "534:25:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 103,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "534:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 104,
                        "nodeType": "ArrayTypeName",
                        "src": "534:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 114,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "32",
                            "id": 111,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "578:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            }
                          ],
                          "id": 110,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "573:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 109,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "573:4:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 112,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "573:7:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 108,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "562:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint256[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 106,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "566:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 107,
                        "nodeType": "ArrayTypeName",
                        "src": "566:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      }
                    },
                    "id": 113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "562:19:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "534:47:2"
                },
                {
                  "assignments": [
                    119
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 119,
                      "mutability": "mutable",
                      "name": "amounts",
                      "nodeType": "VariableDeclaration",
                      "scope": 182,
                      "src": "591:21:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 117,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "591:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 118,
                        "nodeType": "ArrayTypeName",
                        "src": "591:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 128,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "32",
                            "id": 125,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "631:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            }
                          ],
                          "id": 124,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "626:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 123,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "626:4:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 126,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "626:7:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 122,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "615:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint256[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 120,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "619:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 121,
                        "nodeType": "ArrayTypeName",
                        "src": "619:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      }
                    },
                    "id": 127,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "615:19:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "591:43:2"
                },
                {
                  "body": {
                    "id": 156,
                    "nodeType": "Block",
                    "src": "680:80:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 148,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 142,
                              "name": "positionIds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 105,
                              "src": "694:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 144,
                            "indexExpression": {
                              "id": 143,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 130,
                              "src": "706:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "694:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 147,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 145,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 130,
                              "src": "711:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 146,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "713:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "711:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "694:20:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 149,
                        "nodeType": "ExpressionStatement",
                        "src": "694:20:2"
                      },
                      {
                        "expression": {
                          "id": 154,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 150,
                              "name": "amounts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 119,
                              "src": "729:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 152,
                            "indexExpression": {
                              "id": 151,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 130,
                              "src": "737:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "729:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 153,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 98,
                            "src": "742:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "729:20:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 155,
                        "nodeType": "ExpressionStatement",
                        "src": "729:20:2"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 133,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 130,
                      "src": "662:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "32",
                          "id": 136,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "671:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          }
                        ],
                        "id": 135,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "666:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": {
                          "id": 134,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "666:4:2",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 137,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "666:7:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "662:11:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 157,
                  "initializationExpression": {
                    "assignments": [
                      130
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 130,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 157,
                        "src": "650:6:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 129,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "650:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 132,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 131,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "659:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "650:10:2"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 140,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "675:3:2",
                      "subExpression": {
                        "id": 139,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 130,
                        "src": "677:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 141,
                    "nodeType": "ExpressionStatement",
                    "src": "675:3:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "645:115:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 163,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "804:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 164,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "804:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 167,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967268,
                                "src": "824:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Prediction_$266",
                                  "typeString": "contract Prediction"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Prediction_$266",
                                  "typeString": "contract Prediction"
                                }
                              ],
                              "id": 166,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "816:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 165,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "816:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 168,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "816:13:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 169,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 98,
                            "src": "831:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 160,
                                "name": "coin",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 63,
                                "src": "785:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 159,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2056,
                              "src": "778:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$2056_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 161,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "778:12:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$2056",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 162,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transferFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2037,
                          "src": "778:25:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256) external returns (bool)"
                          }
                        },
                        "id": 170,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "778:61:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "636f756c64206e6f74207265636569766520636f6c6c61746572616c20746f6b656e73",
                        "id": 171,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "841:37:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_78876cf43ab8535e33b68e15004e5c9de6676e3ca25f51ac6b556de3a2a1b5dc",
                          "typeString": "literal_string \"could not receive collateral tokens\""
                        },
                        "value": "could not receive collateral tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_78876cf43ab8535e33b68e15004e5c9de6676e3ca25f51ac6b556de3a2a1b5dc",
                          "typeString": "literal_string \"could not receive collateral tokens\""
                        }
                      ],
                      "id": 158,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "770:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 172,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "770:109:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 173,
                  "nodeType": "ExpressionStatement",
                  "src": "770:109:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 175,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "913:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 176,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "913:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 177,
                        "name": "positionIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105,
                        "src": "937:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 178,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 119,
                        "src": "962:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 179,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "983:2:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 174,
                      "name": "_mintBatch",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 931,
                      "src": "889:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256[] memory,uint256[] memory,bytes memory)"
                      }
                    },
                    "id": 180,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "889:106:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 181,
                  "nodeType": "ExpressionStatement",
                  "src": "889:106:2"
                }
              ]
            },
            "functionSelector": "e96b67f3",
            "id": 183,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "buySet",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 99,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 98,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 183,
                  "src": "503:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 97,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "503:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "502:14:2"
            },
            "returnParameters": {
              "id": 100,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "524:0:2"
            },
            "scope": 266,
            "src": "487:515:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 264,
              "nodeType": "Block",
              "src": "1046:444:2",
              "statements": [
                {
                  "assignments": [
                    192
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 192,
                      "mutability": "mutable",
                      "name": "positionIds",
                      "nodeType": "VariableDeclaration",
                      "scope": 264,
                      "src": "1056:25:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 190,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1056:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 191,
                        "nodeType": "ArrayTypeName",
                        "src": "1056:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 201,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "32",
                            "id": 198,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1100:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            }
                          ],
                          "id": 197,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1095:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 196,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "1095:4:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 199,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1095:7:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 195,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1084:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint256[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 193,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1088:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 194,
                        "nodeType": "ArrayTypeName",
                        "src": "1088:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      }
                    },
                    "id": 200,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1084:19:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1056:47:2"
                },
                {
                  "assignments": [
                    206
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 206,
                      "mutability": "mutable",
                      "name": "amounts",
                      "nodeType": "VariableDeclaration",
                      "scope": 264,
                      "src": "1113:21:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 204,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1113:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 205,
                        "nodeType": "ArrayTypeName",
                        "src": "1113:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 215,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "32",
                            "id": 212,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1153:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            }
                          ],
                          "id": 211,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1148:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 210,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "1148:4:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 213,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1148:7:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 209,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1137:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint256[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 207,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1141:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 208,
                        "nodeType": "ArrayTypeName",
                        "src": "1141:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      }
                    },
                    "id": 214,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1137:19:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1113:43:2"
                },
                {
                  "body": {
                    "id": 243,
                    "nodeType": "Block",
                    "src": "1202:80:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 235,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 229,
                              "name": "positionIds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 192,
                              "src": "1216:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 231,
                            "indexExpression": {
                              "id": 230,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 217,
                              "src": "1228:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1216:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 234,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 232,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 217,
                              "src": "1233:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 233,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1235:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "1233:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1216:20:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 236,
                        "nodeType": "ExpressionStatement",
                        "src": "1216:20:2"
                      },
                      {
                        "expression": {
                          "id": 241,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 237,
                              "name": "amounts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 206,
                              "src": "1251:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 239,
                            "indexExpression": {
                              "id": 238,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 217,
                              "src": "1259:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1251:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 240,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 185,
                            "src": "1264:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1251:20:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 242,
                        "nodeType": "ExpressionStatement",
                        "src": "1251:20:2"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 225,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 220,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 217,
                      "src": "1184:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "32",
                          "id": 223,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1193:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          }
                        ],
                        "id": 222,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1188:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": {
                          "id": 221,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1188:4:2",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 224,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1188:7:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1184:11:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 244,
                  "initializationExpression": {
                    "assignments": [
                      217
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 217,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 244,
                        "src": "1172:6:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 216,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1172:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 219,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 218,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1181:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1172:10:2"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 227,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "1197:3:2",
                      "subExpression": {
                        "id": 226,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 217,
                        "src": "1199:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 228,
                    "nodeType": "ExpressionStatement",
                    "src": "1197:3:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "1167:115:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 246,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1316:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 247,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1316:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 248,
                        "name": "positionIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 192,
                        "src": "1340:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 249,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 206,
                        "src": "1365:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      ],
                      "id": 245,
                      "name": "_burnBatch",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1119,
                      "src": "1292:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256[] memory,uint256[] memory)"
                      }
                    },
                    "id": 250,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1292:90:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 251,
                  "nodeType": "ExpressionStatement",
                  "src": "1292:90:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 257,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1422:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 258,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1422:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 259,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 185,
                            "src": "1434:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 254,
                                "name": "coin",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 63,
                                "src": "1407:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 253,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2056,
                              "src": "1400:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$2056_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 255,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1400:12:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$2056",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 256,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2005,
                          "src": "1400:21:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 260,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1400:42:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "636f756c64206e6f74207472616e7366657220636f6c6c61746572616c20746f6b656e73",
                        "id": 261,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1444:38:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_13cb42d7f94650c813370815dc4b3e8ad5bb76a821f4bedc6f13e6a14023fbee",
                          "typeString": "literal_string \"could not transfer collateral tokens\""
                        },
                        "value": "could not transfer collateral tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_13cb42d7f94650c813370815dc4b3e8ad5bb76a821f4bedc6f13e6a14023fbee",
                          "typeString": "literal_string \"could not transfer collateral tokens\""
                        }
                      ],
                      "id": 252,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1392:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 262,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1392:91:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 263,
                  "nodeType": "ExpressionStatement",
                  "src": "1392:91:2"
                }
              ]
            },
            "functionSelector": "0376042b",
            "id": 265,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sellSet",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 186,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 185,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 265,
                  "src": "1025:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 184,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1025:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1024:14:2"
            },
            "returnParameters": {
              "id": 187,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1046:0:2"
            },
            "scope": 266,
            "src": "1008:482:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 267,
        "src": "175:1317:2"
      }
    ],
    "src": "32:1460:2"
  },
  "legacyAST": {
    "absolutePath": "/Users/kylescott/src/simple_prediction/contracts/Prediction.sol",
    "exportedSymbols": {
      "Address": [
        2352
      ],
      "Context": [
        2375
      ],
      "ERC1155": [
        1299
      ],
      "ERC165": [
        2399
      ],
      "IERC1155": [
        1421
      ],
      "IERC1155MetadataURI": [
        1477
      ],
      "IERC1155Receiver": [
        1462
      ],
      "IERC165": [
        2411
      ],
      "IERC20": [
        2056
      ],
      "Prediction": [
        266
      ]
    },
    "id": 267,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 56,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:2"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
        "file": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
        "id": 57,
        "nodeType": "ImportDirective",
        "scope": 267,
        "sourceUnit": 1300,
        "src": "57:59:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 58,
        "nodeType": "ImportDirective",
        "scope": 267,
        "sourceUnit": 2057,
        "src": "117:56:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": [
              {
                "hexValue": "46524545",
                "id": 60,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "string",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "206:6:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_stringliteral_4d5814656ab8bb75753e7152c3f06382e112c82b3a83bb5cffd5c8b7bd8dc44d",
                  "typeString": "literal_string \"FREE\""
                },
                "value": "FREE"
              }
            ],
            "baseName": {
              "id": 59,
              "name": "ERC1155",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1299,
              "src": "198:7:2"
            },
            "id": 61,
            "nodeType": "InheritanceSpecifier",
            "src": "198:15:2"
          }
        ],
        "contractDependencies": [
          1299,
          1421,
          1477,
          2375,
          2399,
          2411
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 266,
        "linearizedBaseContracts": [
          266,
          1299,
          1477,
          1421,
          2399,
          2411,
          2375
        ],
        "name": "Prediction",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "11df9995",
            "id": 63,
            "mutability": "mutable",
            "name": "coin",
            "nodeType": "VariableDeclaration",
            "scope": 266,
            "src": "220:19:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 62,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "220:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "7dc0d1d0",
            "id": 65,
            "mutability": "mutable",
            "name": "oracle",
            "nodeType": "VariableDeclaration",
            "scope": 266,
            "src": "245:21:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 64,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "245:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "7998a1c4",
            "id": 67,
            "mutability": "mutable",
            "name": "identifier",
            "nodeType": "VariableDeclaration",
            "scope": 266,
            "src": "273:25:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 66,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "273:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 95,
              "nodeType": "Block",
              "src": "336:145:2",
              "statements": [
                {
                  "expression": {
                    "id": 74,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 72,
                      "name": "coin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63,
                      "src": "346:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 73,
                      "name": "_coin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 69,
                      "src": "353:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "346:12:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 75,
                  "nodeType": "ExpressionStatement",
                  "src": "346:12:2"
                },
                {
                  "expression": {
                    "id": 79,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 76,
                      "name": "oracle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 65,
                      "src": "368:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 77,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "377:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 78,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "377:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "368:19:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 80,
                  "nodeType": "ExpressionStatement",
                  "src": "368:19:2"
                },
                {
                  "expression": {
                    "id": 93,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 81,
                      "name": "identifier",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 67,
                      "src": "399:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 85,
                              "name": "oracle",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 65,
                              "src": "439:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "hexValue": "4865616473206f72205461696c73",
                              "id": 86,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "447:16:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_0a5316e42a371c930792be9433a9d67ffee1fe00ae59f2e5c7e1f731843ee3f4",
                                "typeString": "literal_string \"Heads or Tails\""
                              },
                              "value": "Heads or Tails"
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "32",
                                  "id": 89,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "470:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_2_by_1",
                                    "typeString": "int_const 2"
                                  },
                                  "value": "2"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_2_by_1",
                                    "typeString": "int_const 2"
                                  }
                                ],
                                "id": 88,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "465:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": {
                                  "id": 87,
                                  "name": "uint",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "465:4:2",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 90,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "465:7:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_0a5316e42a371c930792be9433a9d67ffee1fe00ae59f2e5c7e1f731843ee3f4",
                                "typeString": "literal_string \"Heads or Tails\""
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 83,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967295,
                              "src": "422:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 84,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "encodePacked",
                            "nodeType": "MemberAccess",
                            "src": "422:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 91,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "422:51:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 82,
                        "name": "keccak256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967288,
                        "src": "412:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) pure returns (bytes32)"
                        }
                      },
                      "id": 92,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "412:62:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "399:75:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 94,
                  "nodeType": "ExpressionStatement",
                  "src": "399:75:2"
                }
              ]
            },
            "id": 96,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 70,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 69,
                  "mutability": "mutable",
                  "name": "_coin",
                  "nodeType": "VariableDeclaration",
                  "scope": 96,
                  "src": "321:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 68,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "321:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "320:15:2"
            },
            "returnParameters": {
              "id": 71,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "336:0:2"
            },
            "scope": 266,
            "src": "308:173:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 182,
              "nodeType": "Block",
              "src": "524:478:2",
              "statements": [
                {
                  "assignments": [
                    105
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 105,
                      "mutability": "mutable",
                      "name": "positionIds",
                      "nodeType": "VariableDeclaration",
                      "scope": 182,
                      "src": "534:25:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 103,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "534:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 104,
                        "nodeType": "ArrayTypeName",
                        "src": "534:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 114,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "32",
                            "id": 111,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "578:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            }
                          ],
                          "id": 110,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "573:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 109,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "573:4:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 112,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "573:7:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 108,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "562:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint256[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 106,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "566:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 107,
                        "nodeType": "ArrayTypeName",
                        "src": "566:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      }
                    },
                    "id": 113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "562:19:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "534:47:2"
                },
                {
                  "assignments": [
                    119
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 119,
                      "mutability": "mutable",
                      "name": "amounts",
                      "nodeType": "VariableDeclaration",
                      "scope": 182,
                      "src": "591:21:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 117,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "591:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 118,
                        "nodeType": "ArrayTypeName",
                        "src": "591:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 128,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "32",
                            "id": 125,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "631:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            }
                          ],
                          "id": 124,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "626:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 123,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "626:4:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 126,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "626:7:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 122,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "615:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint256[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 120,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "619:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 121,
                        "nodeType": "ArrayTypeName",
                        "src": "619:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      }
                    },
                    "id": 127,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "615:19:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "591:43:2"
                },
                {
                  "body": {
                    "id": 156,
                    "nodeType": "Block",
                    "src": "680:80:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 148,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 142,
                              "name": "positionIds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 105,
                              "src": "694:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 144,
                            "indexExpression": {
                              "id": 143,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 130,
                              "src": "706:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "694:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 147,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 145,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 130,
                              "src": "711:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 146,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "713:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "711:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "694:20:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 149,
                        "nodeType": "ExpressionStatement",
                        "src": "694:20:2"
                      },
                      {
                        "expression": {
                          "id": 154,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 150,
                              "name": "amounts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 119,
                              "src": "729:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 152,
                            "indexExpression": {
                              "id": 151,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 130,
                              "src": "737:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "729:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 153,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 98,
                            "src": "742:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "729:20:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 155,
                        "nodeType": "ExpressionStatement",
                        "src": "729:20:2"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 133,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 130,
                      "src": "662:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "32",
                          "id": 136,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "671:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          }
                        ],
                        "id": 135,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "666:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": {
                          "id": 134,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "666:4:2",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 137,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "666:7:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "662:11:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 157,
                  "initializationExpression": {
                    "assignments": [
                      130
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 130,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 157,
                        "src": "650:6:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 129,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "650:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 132,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 131,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "659:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "650:10:2"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 140,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "675:3:2",
                      "subExpression": {
                        "id": 139,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 130,
                        "src": "677:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 141,
                    "nodeType": "ExpressionStatement",
                    "src": "675:3:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "645:115:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 163,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "804:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 164,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "804:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 167,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967268,
                                "src": "824:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Prediction_$266",
                                  "typeString": "contract Prediction"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Prediction_$266",
                                  "typeString": "contract Prediction"
                                }
                              ],
                              "id": 166,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "816:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 165,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "816:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 168,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "816:13:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 169,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 98,
                            "src": "831:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 160,
                                "name": "coin",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 63,
                                "src": "785:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 159,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2056,
                              "src": "778:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$2056_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 161,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "778:12:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$2056",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 162,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transferFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2037,
                          "src": "778:25:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256) external returns (bool)"
                          }
                        },
                        "id": 170,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "778:61:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "636f756c64206e6f74207265636569766520636f6c6c61746572616c20746f6b656e73",
                        "id": 171,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "841:37:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_78876cf43ab8535e33b68e15004e5c9de6676e3ca25f51ac6b556de3a2a1b5dc",
                          "typeString": "literal_string \"could not receive collateral tokens\""
                        },
                        "value": "could not receive collateral tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_78876cf43ab8535e33b68e15004e5c9de6676e3ca25f51ac6b556de3a2a1b5dc",
                          "typeString": "literal_string \"could not receive collateral tokens\""
                        }
                      ],
                      "id": 158,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "770:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 172,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "770:109:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 173,
                  "nodeType": "ExpressionStatement",
                  "src": "770:109:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 175,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "913:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 176,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "913:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 177,
                        "name": "positionIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105,
                        "src": "937:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 178,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 119,
                        "src": "962:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 179,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "983:2:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 174,
                      "name": "_mintBatch",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 931,
                      "src": "889:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256[] memory,uint256[] memory,bytes memory)"
                      }
                    },
                    "id": 180,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "889:106:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 181,
                  "nodeType": "ExpressionStatement",
                  "src": "889:106:2"
                }
              ]
            },
            "functionSelector": "e96b67f3",
            "id": 183,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "buySet",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 99,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 98,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 183,
                  "src": "503:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 97,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "503:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "502:14:2"
            },
            "returnParameters": {
              "id": 100,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "524:0:2"
            },
            "scope": 266,
            "src": "487:515:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 264,
              "nodeType": "Block",
              "src": "1046:444:2",
              "statements": [
                {
                  "assignments": [
                    192
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 192,
                      "mutability": "mutable",
                      "name": "positionIds",
                      "nodeType": "VariableDeclaration",
                      "scope": 264,
                      "src": "1056:25:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 190,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1056:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 191,
                        "nodeType": "ArrayTypeName",
                        "src": "1056:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 201,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "32",
                            "id": 198,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1100:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            }
                          ],
                          "id": 197,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1095:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 196,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "1095:4:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 199,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1095:7:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 195,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1084:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint256[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 193,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1088:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 194,
                        "nodeType": "ArrayTypeName",
                        "src": "1088:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      }
                    },
                    "id": 200,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1084:19:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1056:47:2"
                },
                {
                  "assignments": [
                    206
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 206,
                      "mutability": "mutable",
                      "name": "amounts",
                      "nodeType": "VariableDeclaration",
                      "scope": 264,
                      "src": "1113:21:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 204,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1113:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 205,
                        "nodeType": "ArrayTypeName",
                        "src": "1113:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 215,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "32",
                            "id": 212,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1153:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            }
                          ],
                          "id": 211,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1148:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 210,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "1148:4:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 213,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1148:7:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 209,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1137:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint256[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 207,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1141:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 208,
                        "nodeType": "ArrayTypeName",
                        "src": "1141:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      }
                    },
                    "id": 214,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1137:19:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1113:43:2"
                },
                {
                  "body": {
                    "id": 243,
                    "nodeType": "Block",
                    "src": "1202:80:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 235,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 229,
                              "name": "positionIds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 192,
                              "src": "1216:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 231,
                            "indexExpression": {
                              "id": 230,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 217,
                              "src": "1228:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1216:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 234,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 232,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 217,
                              "src": "1233:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 233,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1235:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "1233:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1216:20:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 236,
                        "nodeType": "ExpressionStatement",
                        "src": "1216:20:2"
                      },
                      {
                        "expression": {
                          "id": 241,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 237,
                              "name": "amounts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 206,
                              "src": "1251:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 239,
                            "indexExpression": {
                              "id": 238,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 217,
                              "src": "1259:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1251:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 240,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 185,
                            "src": "1264:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1251:20:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 242,
                        "nodeType": "ExpressionStatement",
                        "src": "1251:20:2"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 225,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 220,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 217,
                      "src": "1184:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "32",
                          "id": 223,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1193:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          }
                        ],
                        "id": 222,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1188:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": {
                          "id": 221,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1188:4:2",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 224,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1188:7:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1184:11:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 244,
                  "initializationExpression": {
                    "assignments": [
                      217
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 217,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 244,
                        "src": "1172:6:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 216,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1172:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 219,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 218,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1181:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1172:10:2"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 227,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "1197:3:2",
                      "subExpression": {
                        "id": 226,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 217,
                        "src": "1199:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 228,
                    "nodeType": "ExpressionStatement",
                    "src": "1197:3:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "1167:115:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 246,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1316:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 247,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1316:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 248,
                        "name": "positionIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 192,
                        "src": "1340:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 249,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 206,
                        "src": "1365:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      ],
                      "id": 245,
                      "name": "_burnBatch",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1119,
                      "src": "1292:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256[] memory,uint256[] memory)"
                      }
                    },
                    "id": 250,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1292:90:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 251,
                  "nodeType": "ExpressionStatement",
                  "src": "1292:90:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 257,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1422:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 258,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1422:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 259,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 185,
                            "src": "1434:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 254,
                                "name": "coin",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 63,
                                "src": "1407:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 253,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2056,
                              "src": "1400:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$2056_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 255,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1400:12:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$2056",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 256,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2005,
                          "src": "1400:21:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 260,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1400:42:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "636f756c64206e6f74207472616e7366657220636f6c6c61746572616c20746f6b656e73",
                        "id": 261,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1444:38:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_13cb42d7f94650c813370815dc4b3e8ad5bb76a821f4bedc6f13e6a14023fbee",
                          "typeString": "literal_string \"could not transfer collateral tokens\""
                        },
                        "value": "could not transfer collateral tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_13cb42d7f94650c813370815dc4b3e8ad5bb76a821f4bedc6f13e6a14023fbee",
                          "typeString": "literal_string \"could not transfer collateral tokens\""
                        }
                      ],
                      "id": 252,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1392:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 262,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1392:91:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 263,
                  "nodeType": "ExpressionStatement",
                  "src": "1392:91:2"
                }
              ]
            },
            "functionSelector": "0376042b",
            "id": 265,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sellSet",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 186,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 185,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 265,
                  "src": "1025:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 184,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1025:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1024:14:2"
            },
            "returnParameters": {
              "id": 187,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1046:0:2"
            },
            "scope": 266,
            "src": "1008:482:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 267,
        "src": "175:1317:2"
      }
    ],
    "src": "32:1460:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.4",
  "updatedAt": "2021-04-18T15:57:21.398Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "balanceOf(address,uint256)": {
        "details": "See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address."
      },
      "balanceOfBatch(address[],uint256[])": {
        "details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
      },
      "isApprovedForAll(address,address)": {
        "details": "See {IERC1155-isApprovedForAll}."
      },
      "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
        "details": "See {IERC1155-safeBatchTransferFrom}."
      },
      "safeTransferFrom(address,address,uint256,uint256,bytes)": {
        "details": "See {IERC1155-safeTransferFrom}."
      },
      "setApprovalForAll(address,bool)": {
        "details": "See {IERC1155-setApprovalForAll}."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      },
      "uri(uint256)": {
        "details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}